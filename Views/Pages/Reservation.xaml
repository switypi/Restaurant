<ui:UiPage x:Class="RestaurantDesk.Views.Pages.Reservation"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
       xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:local="clr-namespace:RestaurantDesk.Views.Pages"
      xmlns:cal= "clr-namespace:RestaurantDesk.UserControls"    
      xmlns:vm="clr-namespace:RestaurantDesk.ViewModels"     
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"  
      d:DataContext="{d:DesignInstance local:Reservation, IsDesignTimeCreatable=False}"
     HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
      Title="Reservation" >
    <!--<ui:UiPage.DataContext>
        <vm:ReservationViewModel></vm:ReservationViewModel>
    </ui:UiPage.DataContext>-->
    <ui:UiPage.Resources>
       
        
        
        <Style x:Key="aptStyle" TargetType="ui:Button" >

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <TextBlock FontFamily="ariel" FontSize="10" Text="{Binding}"  >
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"></RotateTransform>
                            </TextBlock.LayoutTransform>
                        </TextBlock>

                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Margin="3"
                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1,1,1,1" >
                            <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="aptCustom" TargetType="ui:Button" BasedOn="{StaticResource aptStyle}">
            <Setter Property="Border.CornerRadius" Value="5" />
            <Setter Property="Padding" Value="2"></Setter>
        </Style>
       

        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontWeight" Value="Medium"></Setter>
        </Style>

        <Style x:Key="btnStyle" TargetType="{x:Type ui:Button}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Margin="3"
                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1,1,1,1" >
                            <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource actionBtnBackGround}"></Setter>
            <Setter Property="Width" Value="75" ></Setter>
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="Border.CornerRadius" Value="3"></Setter>
            <Style.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                    <Setter Property="Foreground" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>

        </Style>
    </ui:UiPage.Resources>

    <Grid>

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid HorizontalAlignment="Stretch" Background="{StaticResource HeaderBackground}" Grid.Column="0" Grid.Row="0" Height="50">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>


                <ui:Button Name="prevBtn" Icon="Previous48" FontWeight="Bold" Background="{StaticResource actionBtnBackGround}" 
                       HorizontalAlignment="Left"   VerticalAlignment="Stretch"  
                Click="prevBtn_Click" >

                    <ui:Button.Style>
                        <Style TargetType="{x:Type ui:Button}" BasedOn="{StaticResource DefaultUiButtonStyle}">

                            <Style.Triggers>
                                <Trigger Property = "IsMouseOver" Value = "True">
                                    <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ui:Button.Style>
                </ui:Button>
                <ui:Button Name="nextBtn" Icon="Next48" FontWeight="Bold" Grid.Column="2"  Background="{StaticResource actionBtnBackGround }" HorizontalAlignment="Right"  VerticalAlignment="Stretch" Click="nextBtn_Click" >
                    <ui:Button.Style>
                        <Style TargetType="{x:Type ui:Button}" BasedOn="{StaticResource DefaultUiButtonStyle}">

                            <Style.Triggers>
                                <Trigger Property = "IsMouseOver" Value = "True">
                                    <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ui:Button.Style>
                </ui:Button>

                <!--<ui:Button  Style="{StaticResource aptCustom}" Margin="5" Content="hiii"></ui:Button>-->
                <Label x:Name="today" Content="May 2009"  FontFamily="Segoe UI"  VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" HorizontalAlignment="Center" FontSize="25"/>
            </Grid>

            <Border BorderBrush="{StaticResource actionBtnBackGround}" BorderThickness="0.5" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <cal:SchedulerGrid   x:Name="EventsHeaderGrid" ShowCustomGridLines="False"  Grid.Row="0"  Grid.RowSpan="2" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition Height="Auto" MinHeight="124"/>
                        </Grid.RowDefinitions>

                        <!--Week days-->
                        <Label x:Name="dayLabel1" Content="Sun"  FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"  FontFamily="Segoe UI" Grid.Row="0" Grid.Column="1"  >

                        </Label>
                        <Label x:Name="dayLabel2" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"  FontFamily="Segoe UI" Grid.Row="0" Grid.Column="2" Content="Mon"></Label>
                        <Label x:Name="dayLabel3" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI" Grid.Row="0" Grid.Column="3" Content="Tue"></Label>
                        <Label x:Name="dayLabel4" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI" Grid.Row="0" Grid.Column="4" Content="Wed"></Label>
                        <Label x:Name="dayLabel5"  FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI" Grid.Row="0" Grid.Column="5" Content="Thu"></Label>
                        <Label x:Name="dayLabel6" FontWeight="Bold"  HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontFamily="Segoe UI" Grid.Row="0" Grid.Column="6" Content="Fri" ></Label>
                        <Label x:Name="dayLabel7" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI" Grid.Row="0" Grid.Column="7" Content="Sat"   ></Label>
                    </cal:SchedulerGrid>
                    <Border Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Left" BorderBrush="{StaticResource actionBtnBackGround}" BorderThickness="0.5">
                        <Label Width="0" VerticalAlignment="Stretch" HorizontalAlignment="Left"></Label>
                    </Border>
                    <Border Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Right" BorderBrush="{StaticResource actionBtnBackGround}" BorderThickness="0.5">
                        <Label Width="0" VerticalAlignment="Stretch" HorizontalAlignment="Right"></Label>
                    </Border>

                    <!--<Border BorderBrush="#555555" BorderThickness="0.5" Grid.Row="2" Grid.ColumnSpan="2">-->
                    <ScrollViewer materialDesign:ScrollViewerAssist.SupportHorizontalScroll="True" 
                             x:Name="ScrollEventsViewer" VerticalScrollBarVisibility="Auto" Grid.Row="1" >


                        <cal:SchedulerGrid x:Name="EventsGrid" 
                              ShowCustomGridLines="True" GridLineBrush="{StaticResource actionBtnBackGround}" GridLineThickness="0.5" AutomationProperties.Name="EventsGrid" 
                                   PreviewMouseLeftButtonDown="OnPreviewMouseLeftButtonDown"  Loaded="EventsGrid_Loaded">
                        </cal:SchedulerGrid>
                    </ScrollViewer>
                </Grid>
            </Border>


            <!--<Button x:Name="goToWaitingList" Content="Oczekujące" HorizontalAlignment="Right" Margin="0,10,26,0" Width="93" VerticalAlignment="Top" Click="goToWaitingList_Click" MinWidth="90" Height="37"  BorderBrush="#FFB2B2B2" Foreground="#FF363636" Grid.ColumnSpan="2" >
            <Button.Effect>
                <DropShadowEffect ShadowDepth="2" Color="#FFB9B9B9" Opacity="0.8"/>
            </Button.Effect>
            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFFDFDFD" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>-->
            <!--<Button x:Name="goToAddVisit" Content="Dodaj wizytę" HorizontalAlignment="Right" Margin="0,10,96,0" Width="93" VerticalAlignment="Top" ToolTip="Dodaj nową wizytę" Click="goToAddVisit_Click" MinWidth="90" Height="37"  BorderBrush="#FFB2B2B2" Foreground="#FF363636" >
            <Button.Effect>
                <DropShadowEffect ShadowDepth="2" Color="#FFB9B9B9" Opacity="0.8"/>
            </Button.Effect>
            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFFDFDFD" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>-->
            <!--  <Button x:Name="goToTodaysVisits" Content="Day" HorizontalAlignment="Right" Margin="0,18,233,0" Width="93" VerticalAlignment="Top" Click="goToTodayVisit_Click" MinWidth="90" Height="22"  BorderBrush="#FFB2B2B2"/> -->

        </Grid>

        <!--<ui:Dialog x:Name="aptDialog">-->
        <materialDesign:DialogHost x:Name="mn" CloseOnClickAway="False" IsOpen="{Binding ViewModel.IsDialogOpen}"  >
            <materialDesign:DialogHost.DialogContent>
                <materialDesign:Card HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Grid  Margin="10" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                        <Label Content="Customer Name"  HorizontalAlignment="Right" Margin="0,10,0,0" VerticalAlignment="Center"  />
                        <TextBox x:Name="name" Width="200"  Text="{Binding ViewModel.Name}" Height="50" HorizontalAlignment="Stretch" Margin="0,10,0,0" Style="{StaticResource MaterialDesignOutlinedTextBox}" VerticalAlignment="Center" Grid.Column="2" />

                        <Label Content="Mobile No." HorizontalAlignment="Right"  VerticalAlignment="Center" Grid.Row="2"/>
                        <TextBox x:Name="phone" Height="50" Text="{Binding ViewModel.Mobile}"  VerticalAlignment="Center" Grid.Column="2" Style="{StaticResource MaterialDesignOutlinedTextBox}" Grid.Row="2" materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"  MaxLength="10"/>

                        <Label Content="Date" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="4" />
                        <DatePicker  Height="50" x:Name="dtPicker" SelectedDate="{Binding ViewModel.SelectedDate}" Grid.Column="2"  Style="{StaticResource MaterialDesignOutlinedDatePicker}"  Grid.Row="4" />

                        <Label Content="Start Time" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="6" />
                        <materialDesign:TimePicker SelectedTime="{Binding ViewModel.SelectedStartTime}" Height="50" Style="{StaticResource MaterialDesignOutlinedTimePicker}"  Grid.Column="2" Grid.Row="6"/>

                        <Label Content="End Time" HorizontalAlignment="Right"  VerticalAlignment="Center" Grid.Row="8" />
                        <materialDesign:TimePicker SelectedTime="{Binding ViewModel.SelectedEndTime}" Height="50" Is24Hours="False" Style="{StaticResource MaterialDesignOutlinedTimePicker}"  HorizontalAlignment="Stretch"   Grid.Column="2"   Grid.Row="8"/>

                        <StackPanel Orientation="Horizontal"  Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">

                            <ui:Button Name ="btnSave" Content="Save" Command="{Binding ViewModel.SaveCommand}" FontWeight="Medium" FontFamily="Segoe UI"   Background="{StaticResource actionBtnBackGround}"  VerticalAlignment="Center"  >
                                <ui:Button.Style>
                                    <Style TargetType="{x:Type ui:Button}" BasedOn="{StaticResource DefaultUiButtonStyle}">
                                        <Setter Property="Width" Value="75" ></Setter>
                                        <Setter Property="Height" Value="50"></Setter>
                                        <Setter Property="Border.CornerRadius" Value="3"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property = "IsMouseOver" Value = "True">
                                                <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:Button.Style>
                            </ui:Button>

                            <ui:Button Name ="btnDelete" Command="{Binding ViewModel.DeleteCommand}" FontWeight="Medium"  FontFamily="Segoe UI"  Margin="3,0,0,0" Content="Delete" Background="{StaticResource actionBtnBackGround}"  VerticalAlignment="Center"  >
                                <ui:Button.Style>

                                    <Style TargetType="{x:Type ui:Button}" BasedOn="{StaticResource DefaultUiButtonStyle}">
                                        <Setter Property="Width" Value="75" ></Setter>
                                        <Setter Property="Height" Value="50"></Setter>
                                        <Setter Property="Border.CornerRadius" Value="3"></Setter>

                                        <Style.Triggers>
                                            <Trigger Property = "IsMouseOver" Value = "True">
                                                <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:Button.Style>

                            </ui:Button>

                            <ui:Button Name="btnReturn" Command="{Binding ViewModel.CancelCommand}"  FontFamily="Segoe UI" FontWeight="Medium"  Content="Cancel" Margin="3,0,0,0" Background="{StaticResource actionBtnBackGround}"  VerticalAlignment="Center" >
                                <ui:Button.Style>
                                    <Style TargetType="{x:Type ui:Button}" BasedOn="{StaticResource DefaultUiButtonStyle}">
                                        <Setter Property="Width" Value="75" ></Setter>
                                        <Setter Property="Height" Value="50"></Setter>
                                        <Setter Property="Border.CornerRadius" Value="3"></Setter>
                                        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property = "IsMouseOver" Value = "True">
                                                <Setter Property = "MouseOverBackground" Value ="{StaticResource actionBtnMouseOverColor}" />
                                                <Setter Property="Foreground" Value="White"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:Button.Style>
                            </ui:Button>
                        </StackPanel>

                    </Grid>

                </materialDesign:Card>
            </materialDesign:DialogHost.DialogContent>

        </materialDesign:DialogHost>
        <!--</ui:Dialog>-->
    </Grid>

</ui:UiPage>
