<Application
    x:Class="RestaurantDesk.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" 
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:localTheme="clr-namespace:RestaurantDesk"
    xmlns:UC="clr-namespace:RestaurantDesk.UserControls"
    xmlns:hc="https://handyorg.github.io/handycontrol"
     xmlns:Conv="clr-namespace:RestaurantDesk.Converters"     
    DispatcherUnhandledException="OnDispatcherUnhandledException"
   
    Exit="OnExit"
    Startup="OnStartup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!--<hc:ThemeResources RequestedTheme="Dark" AccentColor="Red"/>-->


                <hc:Theme Name="HandyTheme"/>
                <ui:ThemesDictionary Theme="Light" />
                <ui:ControlsDictionary />

               
              
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Green" SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ToastNotifications.Messages;component/Themes/Default.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                

            </ResourceDictionary.MergedDictionaries>


            <SolidColorBrush x:Key="tableBackgroundMouseOverColor" Opacity="0.3" Color="Red"/>
            <SolidColorBrush x:Key="actionBtnMouseOverColor" Opacity="0.3" Color="#4cc2ff"/>
            <SolidColorBrush x:Key="actionBtnBackGround"   Color="#F2CD55"/>
            <SolidColorBrush x:Key="HeaderBackground"  Color="#F2CD55"/>
            <SolidColorBrush x:Key="FutureVisitBackgroun" Color="#82CD47"></SolidColorBrush>
            <SolidColorBrush x:Key="BorderColor" Color="#F2CD55"></SolidColorBrush>

            <SolidColorBrush x:Key="pastVisitBackground" Color="#99A98F"/>
            <SolidColorBrush x:Key="presentVisitBackground" Color="#7900FF"/>
            <SolidColorBrush x:Key="ReserveTableBackground" Color="#118ab2"/>
            <SolidColorBrush x:Key="BusyTableBackground" Color="#fca311"/>
            <SolidColorBrush x:Key="FreeTableBackground"  Color="#E4DCCF"/>
            <SolidColorBrush x:Key="EmptyTableBackground" Color="White"/>
            <SolidColorBrush x:Key="WindowMenuBackground" Color="#F2CD55"></SolidColorBrush>
            <SolidColorBrush x:Key="SelectedRowStyle"   Color="#F2CD55"></SolidColorBrush>
            <SolidColorBrush x:Key="StatusColorRed" Color="#EB6440"></SolidColorBrush>
            <SolidColorBrush x:Key="StatusColorGreen" Color="#82CD47"></SolidColorBrush>
            <SolidColorBrush x:Key="HeaderLabelColor" Color="#4cc2ff"></SolidColorBrush>
            <SolidColorBrush x:Key="MenuColorEdit" Opacity=".4" Color="#A0D995"></SolidColorBrush>
            <SolidColorBrush x:Key="MenuColorDelete" Opacity=".4" Color="#EF5B0C"></SolidColorBrush>
            <SolidColorBrush x:Key="DatagridColumnHeaderForeGround" Color="#4A403A"></SolidColorBrush>
            <SolidColorBrush x:Key="TextblockForeground" Color="#4A403A"></SolidColorBrush>
            <SolidColorBrush x:Key="DataGridCellConditionalDefaultColor" Color="LightSalmon"></SolidColorBrush>
            <SolidColorBrush x:Key="DataGridCellConditionalSetColor" Color="LightSalmon"></SolidColorBrush>
            <SolidColorBrush x:Key="TopHeaderBackground" Color="GhostWhite"></SolidColorBrush>

            <!--EB6440-->
            <!--yellow F2CD55 green 92BA92-->
            <ContextMenu Background="White" x:Key="contextMenu">

                <MenuItem Padding="0"  Background="{StaticResource MenuColorEdit}">
                    <MenuItem.Header>
                        <ui:Button Icon="Edit16" Content="Edit" >
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">

                                    <Setter Property="Foreground" Value="ForestGreen"></Setter>


                                </Style>
                            </Button.Style>
                        </ui:Button>

                    </MenuItem.Header>

                </MenuItem>

                <MenuItem Padding="0"  Background="{StaticResource MenuColorDelete}">
                    <MenuItem.Header>
                        <ui:Button Icon="Delete12" Content="Delete">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    <Setter Property="Foreground" Value="{StaticResource actionBtnBackGround}"></Setter>

                                </Style>
                            </Button.Style>
                        </ui:Button>

                    </MenuItem.Header>
                </MenuItem>
            </ContextMenu>
            <Style TargetType="{x:Type ContextMenu}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border"  Background="White"  CornerRadius="5"   BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="WhiteSmoke" />
                                </Border.BorderBrush>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <!--<ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="lblStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Medium"></Setter>
                <Setter Property="ContentTemplate">

                    <Setter.Value>
                        <DataTemplate>
                            <Border BorderBrush="Blue" BorderThickness="0,0,0,2">
                                <TextBlock Text="{Binding}" />
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style  TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Medium"></Setter>
                <Setter Property="ContentTemplate">

                    <Setter.Value>
                        <DataTemplate>

                            <TextBlock Text="{Binding}" />

                        </DataTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="lblTableStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="FontSize" Value="10"></Setter>
                <Setter Property="ContentTemplate">

                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" TextAlignment="Right" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="lblTableStyleItem" TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Normal" ></Setter>
                <Setter Property="FontSize" Value="10"></Setter>
                <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=TableUserControl}}"></Setter>
                <Setter Property="ContentTemplate">

                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <Style x:Key="lblTableStyleItemValue" TargetType="Label">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Bold" ></Setter>
                <Setter Property="FontSize" Value="10"></Setter>
                <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=TableUserControl}}"></Setter>
                <Setter Property="ContentTemplate">

                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="abcd" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Name="PressedTemplate" TargetType="Button">
                            <Border 
                        Background="LightSkyBlue" 
                        BorderBrush="DeepSkyBlue" 
                        BorderThickness="4"
                        >
                                <TextBlock 
                            Text="Replace this TextBlock with your own content" 
                            Foreground="ForestGreen" 
                            />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="cardStyle4seater" TargetType="{x:Type UC:TableUserControl}" >
                <Setter Property="BorderThickness" Value="2"></Setter>
                <Setter Property="Margin" Value="0"></Setter>

                <Style.Triggers>
                    <Trigger Property="TableType" Value="Rectangle">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type UC:TableUserControl}">
                                    <Border x:Name="border" CornerRadius="5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" Source="Images/4seaterCustom.png" Width="90" Height="60"  HorizontalAlignment="Stretch" 
                                                   Stretch="Fill"></Image>
                                            <ContentPresenter  x:Name="lbl"   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property = "Background" Value ="{x:Null}" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source" TargetName="img" Value="Images/4seaterselected.png"></Setter>

                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property="Background" Value="{x:Null}"></Setter>
                                            <Setter Property="Source" TargetName="img" Value="Images/4seaterselected.png" ></Setter>

                                            <!--<Setter Property="Height"  TargetName="img"  Value="60"></Setter>
                                            <Setter Property="Width"  TargetName="img" Value="120"></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="Uniform" ></Setter>-->
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Trigger>
                    <Trigger Property="TableType" Value="Angular">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type UC:TableUserControl}">
                                    <Border x:Name="border" CornerRadius="5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" Width="80" Height="80" Source="Images/4seatertrianglebasic2.png"   HorizontalAlignment="Stretch" Stretch="Fill"></Image>
                                            <ContentPresenter  x:Name="lbl"   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property = "Background" Value ="{x:Null}" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source"  TargetName="img" Value="Images/4seatertriangularselected.png"></Setter>

                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property="Background" Value="{x:Null}"></Setter>
                                            <Setter Property="Source" TargetName="img" Value="Images/4seatertriangularselected.png" ></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="None" ></Setter>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>


            </Style>



            <Style  TargetType="{x:Type ui:Button}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Margin="3"
                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1,1,1,1" >
                                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Medium"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>

                <Setter Property="Width" Value="75" ></Setter>
                <Setter Property="Height" Value="50"></Setter>
                <Setter Property="Border.CornerRadius" Value="3"></Setter>
                <!--<Setter Property="FontSize" Value="{Binding}"></Setter>-->
                <!--<Style.Triggers>
                    <Trigger Property = "IsMouseOver" Value = "True">
                        <Setter Property = "Background" Value ="{StaticResource presentVisitBackground}" />
                        <Setter Property="Foreground" Value="White"></Setter>
                    </Trigger>
                </Style.Triggers>-->

            </Style>


            <Style x:Key="cardStyle6seater" TargetType="{x:Type UC:TableUserControl}">
                <Setter Property="Background" Value="{x:Null}"></Setter>
                <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
                <Setter Property="BorderThickness" Value="2"></Setter>
                <!--<Setter Property="Margin" Value="5"></Setter>-->
                <Style.Triggers>
                    <Trigger Property="TableType" Value="Rectangle">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type UC:TableUserControl}">
                                    <Border x:Name="border" CornerRadius="5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" 
                                 BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" Source="Images/6seaterCustom.png" Width="130" Height="60"  VerticalAlignment="Stretch" 
                                                   HorizontalAlignment="Stretch" Stretch="Fill"></Image>

                                            <ContentPresenter  x:Name="lbl"  HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property = "Background" Value ="{x:Null}" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source"  TargetName="img" Value="Images/6seaterselected.png"></Setter>
                                            <Setter Property="Height"  TargetName="img"  Value="60"></Setter>
                                            <Setter Property="Width"  TargetName="img" Value="130"></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="Uniform" ></Setter>
                                        </Trigger>

                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property="Background" Value="{x:Null}"></Setter>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source" TargetName="img" Value="Images/6seaterselected.png"></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="Uniform" ></Setter>
                                            <Setter Property="Height"  TargetName="img"  Value="60"></Setter>
                                            <Setter Property="Width"  TargetName="img" Value="130"></Setter>
                                        </Trigger>


                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="TableType" Value="Circle">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type UC:TableUserControl}">
                                    <Border x:Name="border" CornerRadius="5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" 
                                 BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" Source="Images/6seatercirclebasic.png" Width="80" Height="80"  VerticalAlignment="Stretch" 
                                                   HorizontalAlignment="Stretch" Stretch="Fill"></Image>

                                            <ContentPresenter  x:Name="lbl"  HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property = "Background" Value ="{x:Null}" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source"  TargetName="img" Value="Images/6seatercircleselected.png"></Setter>
                                            <Setter Property="Height"  TargetName="img"  Value="80"></Setter>
                                            <Setter Property="Width"  TargetName="img" Value="80"></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="Fill" ></Setter>
                                        </Trigger>

                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Cursor" Value="Hand"></Setter>
                                            <Setter TargetName="border" Property="Background" Value="{x:Null}"></Setter>
                                            <Setter Property="Label.Foreground" Value="White"></Setter>
                                            <Setter Property="Source" TargetName="img" Value="Images/6seatercircleselected.png"></Setter>
                                            <Setter Property="Height"  TargetName="img"  Value="80"></Setter>
                                            <Setter Property="Width"  TargetName="img" Value="80"></Setter>
                                            <Setter Property="Stretch" TargetName="img" Value="Uniform" ></Setter>
                                        </Trigger>


                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>



            </Style>

            <Style x:Key="NavigationStoreHeader" TargetType="{x:Type ui:NavigationHeader}">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="IconForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="IconSize" Value="10" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,8,0,2" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:NavigationHeader}">
                            <Grid
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ui:SymbolIcon
                            x:Name="SymbolIcon"
                            Grid.Column="0"
                            Margin="0,0,4,0"
                            VerticalAlignment="Center"
                            Filled="{TemplateBinding IconFilled}"
                            FontSize="{TemplateBinding IconSize}"
                            Foreground="{TemplateBinding IconForeground}"
                            Symbol="{TemplateBinding Icon}" />
                                <TextBlock
                            Grid.Column="1"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Text}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="Empty">
                                    <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
                                    <Setter TargetName="SymbolIcon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="NavigationStoreItem" TargetType="{x:Type ui:NavigationItem}">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="60" />
                <Setter Property="Margin" Value="0,0,0,8" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="IconSize" Value="24" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="IconForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="BorderBrush"  >
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.0" Color="{DynamicResource ControlStrokeColorDefault}"  />
                        <!--Color="{DynamicResource ControlStrokeColorDefault}"-->
                    </Setter.Value>
                </Setter>
                <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
                <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:NavigationItem}">
                            <Border
                        x:Name="MainBorder"
                        Padding="4"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4">
                                <Grid>
                                    <Rectangle
                                x:Name="ActiveRectangle"
                                Width="4"
                                Height="30"
                                Margin="-4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Opacity="0.0"
                                RadiusX="2"
                                RadiusY="2">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ui:SymbolIcon
                                    x:Name="ElementIcon"
                                    Grid.Row="0"
                                    Margin="0"
                                    FontSize="30"  
                                    Foreground="{TemplateBinding IconForeground}"
                                    Symbol="{TemplateBinding Icon}" />
                                        <!-- FontSize="{TemplateBinding IconSize}-->

                                        <Image
                                    x:Name="ElementImage"
                                    Grid.Row="0"
                                    Width="40" Height="40"
                                    Margin="0"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Source="{TemplateBinding Image}" />

                                        <Grid
                                    x:Name="ContentGrid"
                                    Grid.Row="1"
                                    Height="15"
                                    Margin="0,1,0,0">
                                            <ContentPresenter
                                        x:Name="ElementContentPresenter"
                                        HorizontalAlignment="Center"
                                        Content="{TemplateBinding Content}"
                                        TextElement.FontSize="12"
                                        TextElement.Foreground="{TemplateBinding Foreground}" />
                                        </Grid>
                                    </Grid>
                                </Grid>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsActive" Value="True">
                                    <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                                    <Setter TargetName="ElementIcon" Property="Filled" Value="True" />
                                    <Setter TargetName="MainBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#B3FFFFFF" />
                                            <!--{DynamicResource ControlFillColorDefault}-->
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ElementIcon" Property="Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ElementContentPresenter" Property="Margin" Value="0" />

                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="Height"
                                            From="15"
                                            To="0"
                                            Duration="0:0:.16" />
                                                <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:.16" />
                                                <DoubleAnimation
                                            Storyboard.TargetName="MainBorder"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                            From="0"
                                            To="1"
                                            Duration="0:0:.16" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="Height"
                                            From="0"
                                            To="15"
                                            Duration="0:0:.16" />
                                                <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:.16" />
                                                <DoubleAnimation
                                            Storyboard.TargetName="MainBorder"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                            From="1"
                                            To="0"
                                            Duration="0:0:.16" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Icon" Value="Empty">
                                    <Setter TargetName="ElementIcon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Image" Value="{x:Null}">
                                    <Setter TargetName="ElementImage" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MainBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="0.5" Color="{DynamicResource ControlFillColorDefault}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ElementContentPresenter" Property="TextElement.Foreground" Value="White" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="ElementIcon" Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="ContentGrid" Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlFillColorDefault}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlFillColorDefault}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ui:NavigationStore}">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Width" Value="60" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:NavigationStore}">
                            <ui:DynamicScrollViewer 
                        Margin="0"
                        Padding="0"
                        HorizontalScrollBarVisibility="Disabled">
                                <Grid HorizontalAlignment="Left" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <ItemsControl
                                Grid.Row="0"
                                Width="250"
                                Focusable="False"
                                ItemsSource="{TemplateBinding Items}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel
                                            MinWidth="0"
                                            Margin="0"
                                            HorizontalAlignment="Left" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                    <ItemsControl
                                Grid.Row="1"
                                Focusable="False"
                                ItemsSource="{TemplateBinding Footer}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel
                                            MinWidth="0"
                                            Margin="0"
                                            HorizontalAlignment="Left" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </ui:DynamicScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Resources>
                    <Style BasedOn="{StaticResource NavigationStoreItem}" TargetType="{x:Type ui:NavigationItem}" />
                    <Style BasedOn="{StaticResource NavigationStoreHeader}" TargetType="{x:Type ui:NavigationHeader}" />
                </Style.Resources>
            </Style>

            <Style x:Key="ScrollBarTrackThumb"  TargetType="{x:Type Thumb}">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                                <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
                <Setter Property="Foreground"
            Value="{StaticResource WindowMenuBackground}" />
                <Setter Property="Background"
            Value="Transparent" />
                <Setter Property="Width"
            Value="7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                Value="false">
                                    <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                Value="Auto" />
                                    <Setter Property="Height"
                                Value="8" />
                                    <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style  TargetType="{x:Type materialDesign:Card}">
                <Setter Property="Background" Value="White" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="BorderThickness" Value="2"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type materialDesign:Card}">
                            <ControlTemplate.Resources>
                                <materialDesign:ShadowEdgeConverter x:Key="ShadowEdgeConverter" />
                            </ControlTemplate.Resources>
                            <Grid Background="Transparent">
                                <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                    <AdornerDecorator.OpacityMask>
                                        <MultiBinding Converter="{StaticResource ShadowEdgeConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(materialDesign:ElevationAssist.Elevation)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(materialDesign:ShadowAssist.ShadowEdges)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </AdornerDecorator.OpacityMask>
                                    <Border  CornerRadius="{TemplateBinding UniformCornerRadius,Converter={x:Static Conv:DoubleToCornerRadiusConverter.Instance}}" 
                                             Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                             Path=(materialDesign:ElevationAssist.Elevation), Converter={x:Static materialDesign:ShadowConverter.Instance}}">
                                        <Border x:Name="PART_ClipBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        Clip="{TemplateBinding ContentClip}">
                                            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                                        </Border>
                                    </Border>
                                </AdornerDecorator>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ClipContent" Value="True">
                                    <Setter TargetName="ContentPresenter" Property="Clip" Value="{Binding ContentClip, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <!--<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp3" />-->
            </Style>

            <Style x:Key ="roundButtonTemplate" TargetType ="{x:Type UC:ButtonUserControl}">

                <Setter Property ="Foreground" Value ="White"/>
                <Setter Property ="FontWeight" Value ="Bold"/>
                <Setter Property="FontSize" Value="10"></Setter>
                <Setter Property ="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType ="{x:Type UC:ButtonUserControl}">
                            <Grid>
                                <Ellipse Name ="OuterRing" Width ="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}" 
                                 Height ="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" Fill ="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <!--<Ellipse Name ="InnerRing" Width ="30" Height ="30" Fill ="MintCream"/>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property ="IsMouseOver" Value ="True">
                                    <Setter TargetName ="OuterRing" Property ="Fill" Value ="MediumSeaGreen"/>
                                </Trigger>
                                <Trigger Property ="IsPressed" Value ="True">
                                    <Setter TargetName ="OuterRing" Property ="Height" Value ="60"/>
                                    <Setter TargetName ="OuterRing" Property ="Width" Value ="60"/>
                                </Trigger>

                                <Trigger Property="IsBusy" Value="True">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                    <Setter TargetName="OuterRing" Property="Fill" Value="{StaticResource BusyTableBackground}"></Setter>
                                </Trigger>



                                <Trigger Property="IsBooked" Value="True">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                    <Setter TargetName="OuterRing" Property="Fill" Value="{StaticResource ReserveTableBackground}"></Setter>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="hc:Growl">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="MinHeight" Value="60"/>
                <Setter Property="Width" Value="320"/>
                <Setter Property="Margin" Value="10,10,10,0"/>
                <Setter Property="MaxWidth" Value="320"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="hc:Growl">
                            <Grid Name="PART_GridMain" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{TemplateBinding MaxWidth}"/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.ColumnSpan="3" Grid.RowSpan="2" Effect="{StaticResource EffectShadow2}" Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Path FlowDirection="LeftToRight" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Margin="0,15,0,0" Width="30" Height="30" Data="{TemplateBinding Icon}" Stretch="Uniform" Fill="{TemplateBinding IconBrush}"/>
                                <StackPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="0,10,10,10">
                                    <TextBlock Text="{TemplateBinding Message}" Style="{StaticResource TextBlockDefault}" HorizontalAlignment="Left" TextWrapping="Wrap"/>
                                    <TextBlock Visibility="Collapsed" Text="{Binding Time,RelativeSource={RelativeSource AncestorType=hc:Growl},StringFormat=yyyy/MM/dd HH:mm:ss}" Style="{StaticResource TextBlockDefault}" Foreground="{DynamicResource SecondaryTextBrush}" HorizontalAlignment="Left" Margin="0,4,0,0"/>
                                    <TextBlock Visibility="Collapsed" Text="{Binding Time,RelativeSource={RelativeSource AncestorType=hc:Growl},StringFormat=yyyy/MM/dd HH:mm:ss}" Style="{StaticResource TextBlockDefault}" Foreground="{DynamicResource SecondaryTextBrush}" HorizontalAlignment="Left" Margin="0,4,0,0"/>
                                </StackPanel>
                                <Button Grid.Row="0" Visibility="Collapsed" Margin="11,0" Name="PART_ButtonClose" Command="" Grid.Column="2" Background="Transparent" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="18" Height="18">
                                    <Path FlowDirection="LeftToRight" Data="{StaticResource ErrorGeometry}" Stretch="Uniform" Fill="{DynamicResource SecondaryTextBrush}"/>
                                </Button>
                                <UniformGrid Columns="2" Name="PART_PanelMore" IsEnabled="False" Visibility="Collapsed" Grid.Row="1" Grid.ColumnSpan="3" Height="28" Grid.Column="0">
                                    <Button Command="" Style="{StaticResource ButtonCustom}" HorizontalAlignment="Stretch" Background="Transparent">
                                        <TextBlock Text="{Binding CancelStr,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Foreground="{DynamicResource DangerBrush}"/>
                                    </Button>
                                    <Button Command="" Style="{StaticResource ButtonCustom}" HorizontalAlignment="Stretch" Background="Transparent">
                                        <TextBlock Text="{Binding ConfirmStr,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryBrush}"/>
                                    </Button>
                                </UniformGrid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger  Property="Type" Value="Success">
                                    <Setter Property="Background" Value="{StaticResource StatusColorGreen}"></Setter>
                                    <Setter Property="Background" Value="{StaticResource HeaderLabelColor}"></Setter>
                                </Trigger>
                                <Trigger  Property="Type" Value="Error">
                                    <Setter Property="Background" Value="{StaticResource MenuColorDelete}"></Setter>
                                    <Setter Property="Background" Value="{StaticResource HeaderLabelColor}"></Setter>
                                </Trigger>
                                <Trigger  Property="Type" Value="Info">
                                    <Setter Property="Background" Value="{StaticResource InformationColorBrush}"></Setter>
                                    <Setter Property="Background" Value="{StaticResource HeaderLabelColor}"></Setter>
                                </Trigger>
                                <Trigger  Property="Type" Value="Warning">
                                    <Setter Property="Background" Value="LightSalmon"></Setter>
                                    <Setter Property="Background" Value="{StaticResource HeaderLabelColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>


    </Application.Resources>
</Application>
